---
# Welcome to Dashy! To get started, run `docker compose up -d`
# You can configure your container here, by modifying this file
version: "3.8"
services:
  dashy-work:
    container_name: dashy-work

    # Pull latest image from DockerHub
    image:
      lissy93/dashy:latest
      #deploy:
      # resources:
      # limits:
      # memory: 500M
      # reservations:
      # memory: 250M
    #oom_kill_disable: true

    # To build from source, replace 'image: lissy93/dashy' with 'build: .'
    # build: .

    # Or, to use a Dockerfile for your archtecture, uncomment the following
    # context: .
    # dockerfile: ./docker/Dockerfile-arm32v7

    # You can also use an image with a different tag, or pull from a different registry, e.g:
    # image: ghcr.io/lissy93/dashy or image: lissy93/dashy:arm64v8

    # Pass in your config file below, by specifying the path on your host machine
    volumes:
      - /home/owen/docker/dashy-work/conf.yml:/app/user-data/conf.yml
      - /home/owen/docker/dashy-work/pages:/app/user-data
      - /home/owen/docker/dashy-work/item-icons:/app/user-data/item-icons
      - /home/owen/docker/dashy-work/img:/app/user-data/img
      - /home/owen/docker/dashy-work/styles/custom-theme.scss:/app/src/styles/user-defined-themes.scss

    # Set port that web service will be served on. Keep container port as 80
    # UPDATE: It appears that only port 8080 is working, 8080 is default docker port in server.js
    ports:
      - 9090:8080

    # Set any environmental variables
    environment:
      - NODE_ENV=production
      # Specify your user ID and group ID. You can find this by running `id -u` and `id -g`
      - UID=1000
      - GID=1000

    # Specify restart policy
    restart: unless-stopped

    # Configure healthchecks
    healthcheck:
      test: ["CMD", "node", "/app/services/healthcheck"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
